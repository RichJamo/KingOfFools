/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { King, KingInterface } from "../../contracts/King";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "king",
        type: "address",
      },
    ],
    name: "EthDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "king",
        type: "address",
      },
    ],
    name: "UsdcDeposit",
    type: "event",
  },
  {
    inputs: [],
    name: "MATIC_USD_ORACLE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getKing",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleAddress",
        type: "address",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052341561000f57600080fd5b610de38061001f608039806080f3fe6040608081526004361061015d576000803560e01c6316345f18811461005b5763423cb99e811461008057637920d80481146100a057638db9f39a81146100d85763b6b55f2581146101095763bb09d9b781146101295761015a565b3415610065578182fd5b610076610071366101c4565b61099c565b8351818152602081f35b341561008a578182fd5b61009336610191565b6001548351818152602081f35b34156100aa578182fd5b6100b336610191565b8154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b34156100e2578182fd5b6100eb36610191565b825173ab594600376ec9fd91f8e885dadf0ce036862de08152602081f35b3415610113578182fd5b61012461011f3661024a565b610720565b818351f35b3415610133578182fd5b61013c36610191565b8251732791bca1f2de4661ed88a30c99a7a9449aa841748152602081f35b50505b503661016d5761016b610563565b005b600080fd5b805169ffffffffffffffffffff8116811461018c57600080fd5b919050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112156101c157600080fd5b50565b600060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc830112156101f657600080fd5b60043573ffffffffffffffffffffffffffffffffffffffff8116811461021b57600080fd5b92915050565b60006020828403121561023357600080fd5b8151801515811461024357600080fd5b9392505050565b600060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301121561027c57600080fd5b505060043590565b6000826102ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60007f555555555555555555555555555555555555555555555555555555555555555582116001161561031b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060030290565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff046064118215151615610382577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060640290565b600068056bc75e2d63100000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04811183151516156103f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91909102919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561045a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b60003d80156104ca573d67ffffffffffffffff81111561048157610481610c82565b6040516104b660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182610518565b8181528093503d6000602083013e50505090565b606091505090565b60a0810181811067ffffffffffffffff821117156104f2576104f2610c82565b60405250565b6040810181811067ffffffffffffffff821117156104f2576104f2610c82565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211171561055c5761055c610c82565b6040525050565b60015461056f816102bf565b60011c3410156105fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f596f75277265206e6f74206465706f736974696e6720656e6f7567682065746860448201527f65722100000000000000000000000000000000000000000000000000000000006064820152608481fd5b80158015906106a05761061034600155565b61064b61063260005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b600080600060405134855af1905061066161045f565b5061069a817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006002541660ff8215151681176002555050565b506106a9565b6106a934600155565b5050600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560025460ff1660408051821515815234602082015233918101919091527f7f7caf2cfdc2014aa045dd0ef7e9f5a6a4819e729710bed3689ba095e658738f81606081015b0382a15050565b60015461072c816102bf565b68056bc75e2d631000006107476107416108f1565b836103fb565b0460011c8310156107d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f596f75277265206e6f74206465706f736974696e6720656e6f7567682055534460448201527f43210000000000000000000000000000000000000000000000000000000000006064820152608481fd5b506107e1816102bf565b61081561081061080a6107fb6107f56108f1565b856103fb565b68056bc75e2d63100000900490565b60011c90565b610a4c565b5080158015906108735761082883610389565b61084161083c6108366108f1565b83610284565b600155565b5061086e8361086861063260005473ffffffffffffffffffffffffffffffffffffffff1690565b33610abf565b61088c565b61087c83610322565b61088a61083c6108366108f1565b505b5050600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905560408051828152336020820152907ff5cb588f5f04842fa8a48ffd1f1b14b97339a788a30a4ab1c445e84f46a8b5ff9082908101610719565b600073ab594600376ec9fd91f8e885dadf0ce036862de0803b61091357600080fd5b6040517ffeaf968c00000000000000000000000000000000000000000000000000000000815260a081600483855afa915081610955576040513d6000823e3d81fd5b60008215610243576109673d83610518565b60a0823d8401031215610978578081fd5b61098182610172565b50602082015161099360808401610172565b50949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8216803b6109c057600080fd5b6040517ffeaf968c00000000000000000000000000000000000000000000000000000000815260a081600483855afa915081610a02576040513d6000823e3d81fd5b60008215610a4457610a143d83610518565b60a0823d8401031215610a25578081fd5b610a2e82610172565b506020820151610a4060808401610172565b5090505b949350505050565b604051602081017ff82c50f1000000000000000000000000000000000000000000000000000000008152826024830152602482526060820182811067ffffffffffffffff82111715610aa057610aa0610c82565b80604052506000808351836a636f6e736f6c652e6c6f675afa50505050565b604051602081017f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808416602484015280851660448401525084606483015260648252610b22826104d2565b604051610b2e816104f8565b602081527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020820152732791bca1f2de4661ed88a30c99a7a9449aa84174610b79813b1515610cb1565b6000808551856000855af1935050610b9981610b9361045f565b85610bc6565b9250505080518015610bbf57610bbf610bba60208385010160208501610221565b610d15565b5050505050565b6060818015610bd85783915050610243565b835115801590610bea57845185602001fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526020806004830152875180602484015260005b81811015610c3f57898101830151848201604401528201610c23565b81811115610c51576000604483860101525b506044837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168501030183fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806101c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606481fd5b806101c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608481fdfea36469706673582212201e8046c784f2be450c9a23562e3427f5c679d79102edf9d2c23c6c5666946d9a6c6578706572696d656e74616cf564736f6c63430008070041";

type KingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class King__factory extends ContractFactory {
  constructor(...args: KingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<King> {
    return super.deploy(overrides || {}) as Promise<King>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): King {
    return super.attach(address) as King;
  }
  override connect(signer: Signer): King__factory {
    return super.connect(signer) as King__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KingInterface {
    return new utils.Interface(_abi) as KingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): King {
    return new Contract(address, _abi, signerOrProvider) as King;
  }
}
