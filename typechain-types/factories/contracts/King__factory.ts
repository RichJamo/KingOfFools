/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { King, KingInterface } from "../../contracts/King";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "sent",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "EthEmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "king",
        type: "address",
      },
    ],
    name: "EthSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gasAmount",
        type: "uint256",
      },
    ],
    name: "GasAllocatedForKingPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "king",
        type: "address",
      },
    ],
    name: "UsdcDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "usdcBalance",
        type: "uint256",
      },
    ],
    name: "UsdcEmergencyWithdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "MATIC_USD_ORACLE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "depositUsdc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasAllocatedForKingPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKing",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasAmount",
        type: "uint256",
      },
    ],
    name: "setGasAllocatedForKingPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608080604052346100615760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36108fc60035561110e90816100678239f35b600080fdfe6080604090808252600490813610156101b5575b50361561001f57600080fd5b60025490816003026003810483036101875760011c34106101045750156100d35760607fd29d20006af4e9b0cd7e6d299270d7a18b7afc3b52c437367b874ebfd0a6363891600080808060015434600255337fffffffffffffffffffffffff000000000000000000000000000000000000000082161760015573ffffffffffffffffffffffffffffffffffffffff349116600354f1906100bd610d66565b50805191151582523460208301523390820152a1005b5034600255337fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155005b60849060208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602360248201527f596f75277265206e6f74206465706f736974696e6720656e6f7567682065746860448201527f65722100000000000000000000000000000000000000000000000000000000006064820152fd5b6011827f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b600090813560e01c9081631f19ec2914610c15575080632357928e14610979578063423cb99e1461093c5780634d3e8f0a146108ff578063715018a6146108605780637920d8041461080d5780638da5cb5b146107bc5780638db9f39a1461076f578063bb09d9b71461071e578063db2e21bc146103765763f2fde38b036100135791346103725760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103725781359173ffffffffffffffffffffffffffffffffffffffff9182841680940361036e57610292610c77565b83156102eb5750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b8280fd5b5091903461037257827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610372576103af610c77565b47610677575b81517f70a082310000000000000000000000000000000000000000000000000000000081523082820152602091732791bca1f2de4661ed88a30c99a7a9449aa841748383602481845afa92831561063e578693610648575b5082158015918261041c578780f35b85917feb1bb465721b1baf11a4b364962aa63e8183707b2a9eb8e1e4994504aefb4622838951888152a1926105bc575b50501561053a575082517f095ea7b300000000000000000000000000000000000000000000000000000000838201523360248201526044808201839052815261052f937fa9059cbb00000000000000000000000000000000000000000000000000000000936104ea937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0939192610523926104ef9087606482610cf6565b610dc4565b5195869384015233602484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03908101835282610cf6565b388080808080808780f35b608490838551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152fd5b604492508651928380927fdd62ed3e00000000000000000000000000000000000000000000000000000000825230878301523360248301525afa90811561063e57869161060d575b5015833861044c565b90508381813d8311610637575b6106248183610cf6565b81010312610633575138610604565b8580fd5b503d61061a565b85513d88823e3d90fd5b9092508381813d8311610670575b6106608183610cf6565b810103126106335751913861040d565b503d610656565b8280808047335af1610687610d66565b50156106c2577f029c9780294ed370bdadf9d028c337ec660b4de49f16aac94ba5645e6c1b4d318247815190600182526020820152a16103b5565b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f4572726f7220696e207769746864726177616c000000000000000000000000006044820152fd5b50823461076b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b5760209051732791bca1f2de4661ed88a30c99a7a9449aa841748152f35b5080fd5b50823461076b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b576020905173ab594600376ec9fd91f8e885dadf0ce036862de08152f35b50823461076b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b50823461076b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b50346108fc57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108fc57610897610c77565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50823461076b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b576020906003549051908152f35b50823461076b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b576020906002549051908152f35b50823461076b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076b57823590600254918260030292600384048103610b5f576109c861102e565b93600385830202948186041490151715610b5f5768056bc75e2d6310000080940460011c8210610b925715610b8b5773ffffffffffffffffffffffffffffffffffffffff60015416925b337fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155808202908282041482151715610b5f57610a5461102e565b908115610b3357046002557ff5cb588f5f04842fa8a48ffd1f1b14b97339a788a30a4ab1c445e84f46a8b5ff828051838152336020820152a173ffffffffffffffffffffffffffffffffffffffff8251937f23b872dd00000000000000000000000000000000000000000000000000000000602086015233602486015216604484015260648301526064825260a082019082821067ffffffffffffffff831117610b0757610b0493945052610dc4565b80f35b6024846041877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024866012897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024856011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b3092610a12565b60848660208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f596f75277265206e6f74206465706f736974696e6720656e6f7567682055534460448201527f43210000000000000000000000000000000000000000000000000000000000006064820152fd5b905082346103725760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610372577f0501d492551db2cd7156eecde86493a333f12237a6f0e0ad1d4c61d507e2901c9160209135806003558152a180f35b73ffffffffffffffffffffffffffffffffffffffff600054163303610c9857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610d3757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b3d15610dbf573d9067ffffffffffffffff8211610d375760405191610db360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610cf6565b82523d6000602084013e565b606090565b604051906040820182811067ffffffffffffffff821117610d37576040526020918281527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656483820152732791bca1f2de4661ed88a30c99a7a9449aa84174803b15610f045790610e4c9160008481959282888195519301915af1610e46610d66565b90610f62565b805180610e5a575b50505050565b8184918101031261076b57820151908115918215036108fc5750610e8057808080610e54565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b606484604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b90919015610f6e575090565b815115610f7e5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610ffb575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610fba565b519069ffffffffffffffffffff8216820361102957565b600080fd5b6040517ffeaf968c00000000000000000000000000000000000000000000000000000000815260a08160048173ab594600376ec9fd91f8e885dadf0ce036862de05afa9081156110cc57600091611083575090565b9060a0823d82116110c4575b8161109c60a09383610cf6565b810103126108fc57506110ae81611012565b506110c0608060208301519201611012565b5090565b3d915061108f565b6040513d6000823e3d90fdfea264697066735822122060f4616694cffd90af821a20c0dc86321a81516eaea45d8c02df657f71ca286964736f6c63430008110033";

type KingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class King__factory extends ContractFactory {
  constructor(...args: KingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<King> {
    return super.deploy(overrides || {}) as Promise<King>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): King {
    return super.attach(address) as King;
  }
  override connect(signer: Signer): King__factory {
    return super.connect(signer) as King__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KingInterface {
    return new utils.Interface(_abi) as KingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): King {
    return new Contract(address, _abi, signerOrProvider) as King;
  }
}
