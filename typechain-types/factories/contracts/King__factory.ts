/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { King, KingInterface } from "../../contracts/King";

const _abi = [
  {
    inputs: [],
    name: "MATIC_USD_ORACLE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_king",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deposit_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle_address",
        type: "address",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previous_maximum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previous_usdc_maximum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080806040523461001657610b9a908161001c8239f35b600080fdfe60806040526004361015610023575b361561001957600080fd5b6100216106f7565b005b6000803560e01c90816316345f18146100b25750806329cc6d6f146100a95780636e4a17d3146100a05780638db9f39a146100975780639144c2541461008e578063b6b55f25146100855763bb09d9b70361000e5761008061033f565b61000e565b50610080610238565b506100806101fb565b506100806101ad565b50610080610170565b50610080610118565b346101155760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610115576004359073ffffffffffffffffffffffffffffffffffffffff8216820361011557602061010d83610504565b604051908152f35b80fd5b503461016b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b600080fd5b503461016b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b576020600254604051908152f35b503461016b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b57602060405173ab594600376ec9fd91f8e885dadf0ce036862de08152f35b503461016b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b576020600154604051908152f35b503461016b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b5760043560015461029661028b61027d8361055d565b61028561045a565b906105bc565b60011c831015610818565b15610325576102f9906102b86102b36102ad61045a565b836105ed565b600155565b6102f36102da60005473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b336108a3565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055005b6102b361033a9161033461045a565b906105ed565b6102f9565b503461016b5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b576020604051732791bca1f2de4661ed88a30c99a7a9449aa841748152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff8211176103d957604052565b6103e161038d565b604052565b6040810190811067ffffffffffffffff8211176103d957604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176103d957604052565b519069ffffffffffffffffffff8216820361016b57565b6040517ffeaf968c00000000000000000000000000000000000000000000000000000000815260a08160048173ab594600376ec9fd91f8e885dadf0ce036862de05afa9081156104f8576000916104af575090565b9060a0823d82116104f0575b816104c860a09383610402565b8101031261011557506104da81610443565b506104ec608060208301519201610443565b5090565b3d91506104bb565b6040513d6000823e3d90fd5b60a073ffffffffffffffffffffffffffffffffffffffff916004604051809481937ffeaf968c000000000000000000000000000000000000000000000000000000008352165afa9081156104f8576000916104af575090565b7f5555555555555555555555555555555555555555555555555555555555555555811160011661058d5760030290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482118115151661058d570290565b81156105f7570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b3d1561068d573d9067ffffffffffffffff8211610680575b6040519161067460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610402565b82523d6000602084013e565b61068861038d565b61063e565b606090565b1561069957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152fd5b6001546107038161055d565b60011c341061079457156107865761071a34600155565b610758600080806107426102da825473ffffffffffffffffffffffffffffffffffffffff1690565b6040519034905af1610752610626565b50610692565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055565b565b61078f34600155565b610758565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f596f75277265206e6f74206465706f736974696e6720656e6f7567682065746860448201527f65722100000000000000000000000000000000000000000000000000000000006064820152fd5b1561081f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f596f75277265206e6f74206465706f736974696e6720656e6f7567682055534460448201527f43210000000000000000000000000000000000000000000000000000000000006064820152fd5b60008091610978946040519160208301957f23b872dd00000000000000000000000000000000000000000000000000000000875273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815261090c816103bd565b60405193610919856103e6565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015282732791bca1f2de4661ed88a30c99a7a9449aa8417492610966843b1515610a40565b51925af1610972610626565b90610aa5565b805180610983575050565b8160208061099893610784950101910161099d565b6109b5565b9081602091031261016b5751801515810361016b5790565b156109bc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b15610a4757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b90919015610ab1575090565b815115610ac15750805190602001fd5b604051907f08c379a00000000000000000000000000000000000000000000000000000000082528160208060048301528251928360248401526000915b848310610b4b575050601f836044947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09311610b3e575b01168101030190fd5b6000858286010152610b35565b8183018101518684016044015285935091820191610afe56fea2646970667358221220b3f35927e3c351180a4ed9792af32d234ba95f569daf3ce7d92720ffb430668964736f6c634300080d0033";

type KingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class King__factory extends ContractFactory {
  constructor(...args: KingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<King> {
    return super.deploy(overrides || {}) as Promise<King>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): King {
    return super.attach(address) as King;
  }
  override connect(signer: Signer): King__factory {
    return super.connect(signer) as King__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KingInterface {
    return new utils.Interface(_abi) as KingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): King {
    return new Contract(address, _abi, signerOrProvider) as King;
  }
}
